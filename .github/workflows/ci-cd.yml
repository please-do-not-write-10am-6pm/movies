name: CI/CD
on:
  push:
    branches:
      - master
      - develop
      - "*--CI"
      - "*--CD"

env:
  TMDB_API_ACCESS_TOKEN: ${{ secrets.TMDB_API_ACCESS_TOKEN }}
  TMDB_API_REGION: ${{ secrets.TMDB_API_REGION }}

jobs:
  tests-e2e:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run cypress
        uses: cypress-io/github-action@v2
        with:
          command: npm test

  deploy-to-heroku:
    runs-on: ubuntu-latest
    needs: tests-e2e
    if: contains(github.ref, 'refs/heads/master') || endsWith(github.ref, '--CD')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build, Push and Release a Docker container to Heroku
        uses: gonuit/heroku-docker-deploy@v1.3.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          dockerfile_directory: ./
          dockerfile_name: Dockerfile
          docker_options: "--build-arg SOURCE_HASH=${{ github.sha }} --build-arg TMDB_API_ACCESS_TOKEN=${{ secrets.TMDB_API_ACCESS_TOKEN }} --build-arg TMDB_API_REGION=${{ secrets.TMDB_API_REGION }}"
          process_type: web
